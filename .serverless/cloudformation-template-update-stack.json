{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ImageGeneratorLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/marketing-image-generation-dev-imageGenerator"
      }
    },
    "OutfeedStatusLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/marketing-image-generation-dev-outfeedStatus"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "marketing-image-generation",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/marketing-image-generation-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/marketing-image-generation-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "MarketingImageGenerationQueue",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:SendMessage"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "MarketingImageGenerationQueue",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:SendMessage"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "MarketingImageGenerationDLQ",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:PutObjectAcl"
                  ],
                  "Resource": "arn:aws:s3:::upwork-marketing-image-output/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:PutObjectAcl"
                  ],
                  "Resource": "arn:aws:s3:::upwork-font-assets/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MarketingImageGenerationQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "marketing-image-generation",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ImageGeneratorLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ImageUri": "481665127174.dkr.ecr.ap-south-1.amazonaws.com/serverless-marketing-image-generation-dev@sha256:67dcf309f4f01e4e44b740f3b6891db9130a13465638bb1c5ce214953f5cfaa6"
        },
        "PackageType": "Image",
        "FunctionName": "marketing-image-generation-dev-imageGenerator",
        "MemorySize": 512,
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "SQS_QUEUE_URL": {
              "Ref": "MarketingImageGenerationQueue"
            },
            "DLQ_URL": {
              "Ref": "MarketingImageGenerationDLQ"
            },
            "DB_HOST": "dbperformancedev.postgres.database.azure.com",
            "DB_PORT": "5432",
            "DB_NAME": "postgres",
            "DB_USER": "postgres",
            "DB_PASSWORD": "$t67b@123_Dev$DB",
            "AUTH0_DOMAIN": "auth.sparkiq.ai",
            "AUTH0_AUDIENCE": "https://api.sparkiq.ai",
            "S3_IMAGE_OUTPUT_BUCKET": "upwork-marketing-image-output",
            "GOOGLE_API_KEY": "AIzaSyB-Ht9R4Wkmd1mwb9PL8AF4LufAHG2-Gd4",
            "FONT_S3_BUCKET": "upwork-font-assets",
            "LOG_LEVEL": "DEBUG"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ImageGeneratorLogGroup"
      ]
    },
    "ImageGeneratorLambdaVersionUUp3rEJhpRy9RA3FtyUoGrGnMIgFdNUwinbIAu8KTD8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ImageGeneratorLambdaFunction"
        },
        "CodeSha256": "67dcf309f4f01e4e44b740f3b6891db9130a13465638bb1c5ce214953f5cfaa6"
      }
    },
    "OutfeedStatusLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ImageUri": "481665127174.dkr.ecr.ap-south-1.amazonaws.com/serverless-marketing-image-generation-dev@sha256:67dcf309f4f01e4e44b740f3b6891db9130a13465638bb1c5ce214953f5cfaa6"
        },
        "ImageConfig": {
          "Command": [
            "lambda_src.outfeed_status.lambda_handler"
          ]
        },
        "PackageType": "Image",
        "FunctionName": "marketing-image-generation-dev-outfeedStatus",
        "MemorySize": 256,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "SQS_QUEUE_URL": {
              "Ref": "MarketingImageGenerationQueue"
            },
            "DLQ_URL": {
              "Ref": "MarketingImageGenerationDLQ"
            },
            "DB_HOST": "dbperformancedev.postgres.database.azure.com",
            "DB_PORT": "5432",
            "DB_NAME": "postgres",
            "DB_USER": "postgres",
            "DB_PASSWORD": "$t67b@123_Dev$DB",
            "AUTH0_DOMAIN": "auth.sparkiq.ai",
            "AUTH0_AUDIENCE": "https://api.sparkiq.ai",
            "S3_IMAGE_OUTPUT_BUCKET": "upwork-marketing-image-output",
            "GOOGLE_API_KEY": "AIzaSyB-Ht9R4Wkmd1mwb9PL8AF4LufAHG2-Gd4",
            "FONT_S3_BUCKET": "upwork-font-assets",
            "LOG_LEVEL": "DEBUG"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "OutfeedStatusLogGroup"
      ]
    },
    "OutfeedStatusLambdaVersionNy54BSqi6aWdXkoZkENlX0wggw7XlKxGGFMy5tS3g": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "OutfeedStatusLambdaFunction"
        },
        "CodeSha256": "67dcf309f4f01e4e44b740f3b6891db9130a13465638bb1c5ce214953f5cfaa6"
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-marketing-image-generation",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceOutfeedDashstatus": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "outfeed-status",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceOutfeedDashstatusOutfeedidVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceOutfeedDashstatus"
        },
        "PathPart": "{outfeed_id}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodOutfeedDashstatusOutfeedidVarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceOutfeedDashstatusOutfeedidVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodOutfeedDashstatusOutfeedidVarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {
          "method.request.path.outfeed_id": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceOutfeedDashstatusOutfeedidVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "OutfeedStatusLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayMarketingimagegenerationRequestValidator"
        }
      },
      "DependsOn": [
        "OutfeedStatusLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMarketingimagegenerationRequestValidator": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true,
        "Name": "marketing-image-generation-dev | Validate request body and querystring parameters"
      }
    },
    "ApiGatewayDeployment1747377140595": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodOutfeedDashstatusOutfeedidVarOptions",
        "ApiGatewayMethodOutfeedDashstatusOutfeedidVarGet"
      ]
    },
    "OutfeedStatusLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "OutfeedStatusLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ImageGeneratorEventSourceMappingSQSMarketingImageGenerationQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 5,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "MarketingImageGenerationQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "ImageGeneratorLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "MarketingImageGenerationQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "MarketingImageGenerationQueue-dev",
        "VisibilityTimeout": 360,
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "MarketingImageGenerationDLQ",
              "Arn"
            ]
          },
          "maxReceiveCount": 3
        }
      }
    },
    "MarketingImageGenerationDLQ": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "MarketingImageGenerationDLQ-dev",
        "MessageRetentionPeriod": 1209600
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-ap-south-1-02ed68f0-1925",
      "Export": {
        "Name": "sls-marketing-image-generation-dev-ServerlessDeploymentBucketName"
      }
    },
    "ImageGeneratorLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ImageGeneratorLambdaVersionUUp3rEJhpRy9RA3FtyUoGrGnMIgFdNUwinbIAu8KTD8"
      },
      "Export": {
        "Name": "sls-marketing-image-generation-dev-ImageGeneratorLambdaFunctionQualifiedArn"
      }
    },
    "OutfeedStatusLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "OutfeedStatusLambdaVersionNy54BSqi6aWdXkoZkENlX0wggw7XlKxGGFMy5tS3g"
      },
      "Export": {
        "Name": "sls-marketing-image-generation-dev-OutfeedStatusLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-marketing-image-generation-dev-ServiceEndpoint"
      }
    }
  }
}